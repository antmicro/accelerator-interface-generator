stages:
  - build
  - test
  - deploy

.setup_env: &setup_env
  image: debian:trixie
  before_script:
    - export DEBIAN_FRONTEND=noninteractive
    - apt --allow-releaseinfo-change update && apt install -y --no-install-recommends git build-essential make apt-transport-https curl gnupg default-jdk default-jre
    - echo "deb https://repo.scala-sbt.org/scalasbt/debian all main" | tee /etc/apt/sources.list.d/sbt.list
    - echo "deb https://repo.scala-sbt.org/scalasbt/debian /" | tee /etc/apt/sources.list.d/sbt_old.list
    - curl -sL "https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x2EE0EA64E40A89B84B2DF73499E82A75642AC823" | apt-key add
    - apt update && apt install -y sbt python3 python3-pip python3.11-venv imagemagick iverilog verilator
    # Create and activate Python venv
    - python3 -m venv .venv
    - source .venv/bin/activate
    - git submodule update --init --recursive
    - pip3 install -r requirements.txt
    - mkdir out

build-example-arty:
  <<: *setup_env
  stage: build
  script:
    - make target
    - mv aig_generated_target.py *.v out/
  variables:
    AIG_CONFIG: examples/configs/config_arty.json
    TARGET_CONFIG: examples/target_configs/config_arty.json
  artifacts:
    name: "$CI_JOB_NAME"
    paths:
      - out/

build-example-zvb:
  <<: *setup_env
  stage: build
  script:
    - make target
    - mv aig_generated_target.py *.v out/
  variables:
    AIG_CONFIG: examples/configs/config_arty.json
    TARGET_CONFIG: examples/target_configs/config_zvb.json
  artifacts:
    name: "$CI_JOB_NAME"
    paths:
      - out/

test-basic:
  <<: *setup_env
  stage: test
  script:
    - make test
    - mv out.png out.rgba out/
  variables:
    AIG_CONFIG: examples/configs/config_zvb.json
  artifacts:
    paths:
      - out/

test-cocotb:
  <<: *setup_env
  stage: test
  script:
    - make cocotb_test
    - mv sim_build/AIGTop.fst out/
  variables:
    AIG_CONFIG: examples/configs/config_zvb.json
  artifacts:
    paths:
      - out/
  only:
    - merge_requests

build-docs:
  <<: *setup_env
  stage: build
  script:
    - SPHINXOPTS="-A conf_py_path=$DOCS_DIR/$SOURCEDIR/ -A commit=$CI_BUILD_REF -A branch=$CI_BUILD_REF_NAME" make html
    - cp docs/*.png build/html
    - tar cf $CI_DOCS_ARCHIVE -C build/html/ .
  artifacts:
    paths:
      - build
      - $CI_DOCS_ARCHIVE

deploy-docs:
  image: $CI_DOCS_DOCKER_IMAGE
  variables:
    GIT_STRATEGY: none
  dependencies:
    - build-docs
  stage: deploy
  tags: ["docs"]
  script: echo 'Deploying docs'
  artifacts:
    paths:
      - $CI_DOCS_ARCHIVE
